Datetime,Hash,Parent,Author,Commit Msg,Filepath,Filename,Removed Test Case,Referenced Functions,Deleted With Source Code,Deleted With Whole File
11/13/2008 20:17:19,"=HYPERLINK(""https://github.com/google/gson/commit/bc2c25f235808c7e90d9bde6b2795997405af0cf"", ""bc2c25f235808c7e90d9bde6b2795997405af0cf"")","=HYPERLINK(""https://github.com/google/gson/commit/9245bebdba9a3227674f3c0b08d86165891f02cc"", ""9245bebdba9a3227674f3c0b08d86165891f02cc"")",inder123@gmail.com,"Removed ExceptionWrapper from serializers. 
This is done since it is improper to throw a parse exception from serializers. Moreover, the serializers dont deal with external input, they deal with classes, so they need not guard against spurious input.",gson/src/test/java/com/google/gson/JsonSerializerExceptionWrapperTest.java,JsonSerializerExceptionWrapperTest.java,testRethrowJsonParseException,"getCause,serialize,getMessage",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/9245bebdba9a3227674f3c0b08d86165891f02cc"", ""9245bebdba9a3227674f3c0b08d86165891f02cc"")",,,,,testWrappedExceptionPropagation,"serialize,getCause",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/9245bebdba9a3227674f3c0b08d86165891f02cc"", ""9245bebdba9a3227674f3c0b08d86165891f02cc"")",,,,,testProperSerialization,"serialize,getAsString",yes,yes
11/14/2008 23:11:28,"=HYPERLINK(""https://github.com/google/gson/commit/cf2a457af7b0422e7728e0d55a4e794048af5a6b"", ""cf2a457af7b0422e7728e0d55a4e794048af5a6b"")","=HYPERLINK(""https://github.com/google/gson/commit/0d8150fe52eba34a0472c47be71587885ba4a94c"", ""0d8150fe52eba34a0472c47be71587885ba4a94c"")",joel.leitch@gmail.com,Removed the TypeAdapter object from GSON now that the primitive objects and fields are created by a custom Type Adapter.,gson/src/test/java/com/google/gson/PrimitiveTypeAdapterTest.java,PrimitiveTypeAdapterTest.java,testImproperConversion,adaptType,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/0d8150fe52eba34a0472c47be71587885ba4a94c"", ""0d8150fe52eba34a0472c47be71587885ba4a94c"")",,,,,testImproperCharacterConversion,adaptType,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/0d8150fe52eba34a0472c47be71587885ba4a94c"", ""0d8150fe52eba34a0472c47be71587885ba4a94c"")",,,,,testProperPrimitiveConversions,"adaptType,doubleValue,charValue",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/0d8150fe52eba34a0472c47be71587885ba4a94c"", ""0d8150fe52eba34a0472c47be71587885ba4a94c"")",,,,,testProperEnumConversions,adaptType,yes,yes
12/19/2008 11:46:24,"=HYPERLINK(""https://github.com/google/gson/commit/53f7d26b6d442467d54f0e61fdf030cd395011f7"", ""53f7d26b6d442467d54f0e61fdf030cd395011f7"")","=HYPERLINK(""https://github.com/google/gson/commit/f7e4d5e4bbdb10ef3215c66c0df4ca3828f99768"", ""f7e4d5e4bbdb10ef3215c66c0df4ca3828f99768"")",inder123@gmail.com,"removed tests for serialization of BigDecimal NaN, positive and negative infinity since BigDecimal can not be created with these values.",gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,PrimitiveTest.java,testBigDecimalNaNSerializationNotSupported,toJson,no,no
,,"=HYPERLINK(""https://github.com/google/gson/commit/f7e4d5e4bbdb10ef3215c66c0df4ca3828f99768"", ""f7e4d5e4bbdb10ef3215c66c0df4ca3828f99768"")",,,,,testBigDecimalInfinitySerializationNotSupported,toJson,no,no
,,"=HYPERLINK(""https://github.com/google/gson/commit/f7e4d5e4bbdb10ef3215c66c0df4ca3828f99768"", ""f7e4d5e4bbdb10ef3215c66c0df4ca3828f99768"")",,,,,testNegativeInfinityBigDecimalSerializationNotSupported,toJson,no,no
03/30/2009 13:36:55,"=HYPERLINK(""https://github.com/google/gson/commit/e340801d258e18f733620b0fd03d65fffb8df6c3"", ""e340801d258e18f733620b0fd03d65fffb8df6c3"")","=HYPERLINK(""https://github.com/google/gson/commit/4f727df749b9ad97dfd0dd108a67539b7f163ee2"", ""4f727df749b9ad97dfd0dd108a67539b7f163ee2"")",inder123@gmail.com,Moved enum-related tests under EnumTest class.,gson/src/test/java/com/google/gson/functional/EnumTest.java,EnumTest.java,testEnumFieldSerialization,"toJson,toString",no,no
,,"=HYPERLINK(""https://github.com/google/gson/commit/4f727df749b9ad97dfd0dd108a67539b7f163ee2"", ""4f727df749b9ad97dfd0dd108a67539b7f163ee2"")",,,,,testEnumFieldDeserialization,fromJson,no,no
,,"=HYPERLINK(""https://github.com/google/gson/commit/4f727df749b9ad97dfd0dd108a67539b7f163ee2"", ""4f727df749b9ad97dfd0dd108a67539b7f163ee2"")",,,gson/src/test/java/com/google/gson/functional/ObjectTest.java,ObjectTest.java,testTopLevelEnumSerialization,"getExpectedJson,toJson",no,no
,,"=HYPERLINK(""https://github.com/google/gson/commit/4f727df749b9ad97dfd0dd108a67539b7f163ee2"", ""4f727df749b9ad97dfd0dd108a67539b7f163ee2"")",,,,,testTopLevelEnumDeserialization,"getExpectedJson,fromJson",no,no
09/23/2009 13:28:03,"=HYPERLINK(""https://github.com/google/gson/commit/50eb582657b5a07aa4aec22f11c9f3071eb631a8"", ""50eb582657b5a07aa4aec22f11c9f3071eb631a8"")","=HYPERLINK(""https://github.com/google/gson/commit/3b0f8f4340c68d8fde0840befbc1b89afa14933f"", ""3b0f8f4340c68d8fde0840befbc1b89afa14933f"")",joel.leitch@gmail.com,Ensure that the JsonElement.toString() will always generate valid JSON (even when  control characters/whitespace characters are used).,gson/src/test/java/com/google/gson/JsonEscapingVisitorTest.java,JsonEscapingVisitorTest.java,testNonStringPrimitiveVisitation,"visitPrimitive,getAsBoolean",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3b0f8f4340c68d8fde0840befbc1b89afa14933f"", ""3b0f8f4340c68d8fde0840befbc1b89afa14933f"")",,,,,testStringPrimitiveVisitationNoEscapingRequired,"visitPrimitive,getAsObject",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3b0f8f4340c68d8fde0840befbc1b89afa14933f"", ""3b0f8f4340c68d8fde0840befbc1b89afa14933f"")",,,,,testStringPrimitiveVisitationEscapingRequired,"visitPrimitive,escapeJsonString,getAsString",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3b0f8f4340c68d8fde0840befbc1b89afa14933f"", ""3b0f8f4340c68d8fde0840befbc1b89afa14933f"")",,,,,testNonStringArrayVisitation,"add,getAsInt,visitArrayMember",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3b0f8f4340c68d8fde0840befbc1b89afa14933f"", ""3b0f8f4340c68d8fde0840befbc1b89afa14933f"")",,,,,testStringArrayVisitationNoEscaping,"getAsString,add,visitArrayMember",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3b0f8f4340c68d8fde0840befbc1b89afa14933f"", ""3b0f8f4340c68d8fde0840befbc1b89afa14933f"")",,,,,testStringArrayVisitationEscapingRequired,"add,getAsString,escapeJsonString,visitArrayMember",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3b0f8f4340c68d8fde0840befbc1b89afa14933f"", ""3b0f8f4340c68d8fde0840befbc1b89afa14933f"")",,,,,testNonStringFieldVisitation,"visitObjectMember,addProperty,getAsInt",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3b0f8f4340c68d8fde0840befbc1b89afa14933f"", ""3b0f8f4340c68d8fde0840befbc1b89afa14933f"")",,,,,testStringFieldVisitationNoEscaping,"visitObjectMember,addProperty,getAsString",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3b0f8f4340c68d8fde0840befbc1b89afa14933f"", ""3b0f8f4340c68d8fde0840befbc1b89afa14933f"")",,,,,testStringFieldVisitationEscapingRequired,"addProperty,getAsString,visitObjectMember,escapeJsonString",yes,yes
11/01/2010 17:57:39,"=HYPERLINK(""https://github.com/google/gson/commit/43f2a0012b5fb9c94a5e1bb926034e136a3a8dfb"", ""43f2a0012b5fb9c94a5e1bb926034e136a3a8dfb"")","=HYPERLINK(""https://github.com/google/gson/commit/abe244c099b8c0f0e4c33921a55b27755564713a"", ""abe244c099b8c0f0e4c33921a55b27755564713a"")",inder123@gmail.com,Removed JavaCC parser definition and its generated classes.,gson/src/test/java/com/google/gson/StringUnmarshallerTest.java,StringUnmarshallerTest.java,testCtrlN,unmarshall,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/abe244c099b8c0f0e4c33921a55b27755564713a"", ""abe244c099b8c0f0e4c33921a55b27755564713a"")",,,,,testCtrlR,unmarshall,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/abe244c099b8c0f0e4c33921a55b27755564713a"", ""abe244c099b8c0f0e4c33921a55b27755564713a"")",,,,,testCtrlT,unmarshall,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/abe244c099b8c0f0e4c33921a55b27755564713a"", ""abe244c099b8c0f0e4c33921a55b27755564713a"")",,,,,testBackSpace,unmarshall,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/abe244c099b8c0f0e4c33921a55b27755564713a"", ""abe244c099b8c0f0e4c33921a55b27755564713a"")",,,,,testFormFeed,unmarshall,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/abe244c099b8c0f0e4c33921a55b27755564713a"", ""abe244c099b8c0f0e4c33921a55b27755564713a"")",,,,,testSingleQuote,unmarshall,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/abe244c099b8c0f0e4c33921a55b27755564713a"", ""abe244c099b8c0f0e4c33921a55b27755564713a"")",,,,,testSingleQuoteEscaped,unmarshall,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/abe244c099b8c0f0e4c33921a55b27755564713a"", ""abe244c099b8c0f0e4c33921a55b27755564713a"")",,,,,testDoubleQuote,unmarshall,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/abe244c099b8c0f0e4c33921a55b27755564713a"", ""abe244c099b8c0f0e4c33921a55b27755564713a"")",,,,,testDoubleQuoteEscaped,unmarshall,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/abe244c099b8c0f0e4c33921a55b27755564713a"", ""abe244c099b8c0f0e4c33921a55b27755564713a"")",,,,,testBackslash,unmarshall,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/abe244c099b8c0f0e4c33921a55b27755564713a"", ""abe244c099b8c0f0e4c33921a55b27755564713a"")",,,,,testUnicodeString,unmarshall,yes,yes
11/12/2010 11:12:46,"=HYPERLINK(""https://github.com/google/gson/commit/822d1bc75e70538f01638955bf766316e416499c"", ""822d1bc75e70538f01638955bf766316e416499c"")","=HYPERLINK(""https://github.com/google/gson/commit/7d055fcb517a25e3cf141a867ec2b53264c40a19"", ""7d055fcb517a25e3cf141a867ec2b53264c40a19"")",inder123@gmail.com,moved contents of wsdef to greaze-definition.,wsdef/src/test/java/com/google/gson/rest/definition/IdTest.java,IdTest.java,testRawTypeNotEqualToParameterizedOfConcreteType,"getType,areEquivalentTypes",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d055fcb517a25e3cf141a867ec2b53264c40a19"", ""7d055fcb517a25e3cf141a867ec2b53264c40a19"")",,,,,testRawTypeEqualToParameterizedOfWildcardType,"getType,areEquivalentTypes",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d055fcb517a25e3cf141a867ec2b53264c40a19"", ""7d055fcb517a25e3cf141a867ec2b53264c40a19"")",,,,,testStaticEquals,"get,equals",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d055fcb517a25e3cf141a867ec2b53264c40a19"", ""7d055fcb517a25e3cf141a867ec2b53264c40a19"")",,,wsdef/src/test/java/com/google/gson/rest/definition/IdTypeAdapterTest.java,IdTypeAdapterTest.java,testSerializeId,"toJson,contains,valueOf,getValue",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d055fcb517a25e3cf141a867ec2b53264c40a19"", ""7d055fcb517a25e3cf141a867ec2b53264c40a19"")",,,,,testDeserializeId,"get,getId,getStudents,fromJson,getValue",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d055fcb517a25e3cf141a867ec2b53264c40a19"", ""7d055fcb517a25e3cf141a867ec2b53264c40a19"")",,,wsdef/src/test/java/com/google/gson/webservice/definition/CallPathTest.java,CallPathTest.java,testVersionIsSkipped,"get,getVersion,getResourceId",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d055fcb517a25e3cf141a867ec2b53264c40a19"", ""7d055fcb517a25e3cf141a867ec2b53264c40a19"")",,,,,testVersionNotPresent,"get,getVersion,getResourceId",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d055fcb517a25e3cf141a867ec2b53264c40a19"", ""7d055fcb517a25e3cf141a867ec2b53264c40a19"")",,,,,testResourceIdPresent,"get,getResourceId",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d055fcb517a25e3cf141a867ec2b53264c40a19"", ""7d055fcb517a25e3cf141a867ec2b53264c40a19"")",,,,,testResourceIdWithEndSlashPresent,"get,getResourceId",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d055fcb517a25e3cf141a867ec2b53264c40a19"", ""7d055fcb517a25e3cf141a867ec2b53264c40a19"")",,,,,testVersionAndResourceIdPresent,"get,getVersion,getResourceId",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d055fcb517a25e3cf141a867ec2b53264c40a19"", ""7d055fcb517a25e3cf141a867ec2b53264c40a19"")",,,,,testNullPath,"get,getResourceId,getVersion",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d055fcb517a25e3cf141a867ec2b53264c40a19"", ""7d055fcb517a25e3cf141a867ec2b53264c40a19"")",,,,,testEmptyPath,"get,getVersion,getResourceId",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d055fcb517a25e3cf141a867ec2b53264c40a19"", ""7d055fcb517a25e3cf141a867ec2b53264c40a19"")",,,,,testWhiteSpacePath,"get,getVersion,getResourceId",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d055fcb517a25e3cf141a867ec2b53264c40a19"", ""7d055fcb517a25e3cf141a867ec2b53264c40a19"")",,,wsdef/src/test/java/com/google/gson/webservice/definition/TypedKeyTest.java,TypedKeyTest.java,testEqualsForSameName,,no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d055fcb517a25e3cf141a867ec2b53264c40a19"", ""7d055fcb517a25e3cf141a867ec2b53264c40a19"")",,,,,testEqualsFailsForDifferentClasses,equals,yes,yes
11/16/2010 16:18:28,"=HYPERLINK(""https://github.com/google/gson/commit/56344cf06786bf8cd031933a5fc39eeacde7d942"", ""56344cf06786bf8cd031933a5fc39eeacde7d942"")","=HYPERLINK(""https://github.com/google/gson/commit/0a3f5fa801954b07d0041d8a7dc6f87dc210a470"", ""0a3f5fa801954b07d0041d8a7dc6f87dc210a470"")",joel.leitch@gmail.com,Remove duplicate test.,gson/src/test/java/com/google/gson/JsonParserTest.java,JsonParserTest.java,testParseSingleWordFails,parse,no,no
12/03/2010 02:07:13,"=HYPERLINK(""https://github.com/google/gson/commit/d1ddab2e6ffcd938ac0d133fd46caf5fb2417009"", ""d1ddab2e6ffcd938ac0d133fd46caf5fb2417009"")","=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",jesse@swank.ca,"Swap out GSON's type mechanics with the Type resolution code from Guice.

The most significant impact of this change is that fields whose types are type parameters should now GSONify just fine. For example, consider the class below.

abstract class Foo<A, B> {
   A a;
   B b;
   List<A> list;
   Map<A, List<B>> map;
}
class RealFoo extends Foo<String, Integer> {...}

This is a reasonable checkpoint but some work still needs to be done for this. In particular, the level of visibility of methods in TypeToken and Type should be reconsidered; we're exposing more than we need to!",gson/src/test/java/com/google/gson/TypeInfoArrayTest.java,TypeInfoArrayTest.java,testArray,"getRawClass,getComponentRawType,getClass",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testArrayOfArrays,"getClass,getSecondLevelType,getRawClass,getComponentRawType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testParameterizedArray,"getType,getRawClass,getComponentRawType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testParameterizedArrayOfArrays,"getSecondLevelType,getRawClass,getComponentRawType,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testNestedParameterizedArray,"getSecondLevelType,getRawClass,getComponentRawType,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testPrimitiveArray,"isArray,getSecondLevelType,isPrimitive",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testStringArray,"isArray,getSecondLevelType,getRawClass",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testPrimitiveArrayType,"isArray,getSecondLevelType,getRawClass",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testStringArrayType,"isArray,getSecondLevelType,getRawClass",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testArrayAsParameterizedTypes,"getActualType,isArray,getSecondLevelType,getActualTypeForFirstTypeVariable,getRawClass,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,gson/src/test/java/com/google/gson/TypeInfoFactoryTest.java,TypeInfoFactoryTest.java,testSimpleField,"getActualType,isArray,getClass,getField,isEnum,getTypeInfoForField,getRawClass",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testEnumField,"getActualType,isArray,getClass,getField,isEnum,getTypeInfoForField,getRawClass",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testParameterizedTypeField,"getActualType,getClass,isArray,getField,isEnum,getTypeInfoForField,getRawClass,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testNestedParameterizedTypeField,"getActualType,getClass,isArray,getField,isEnum,getTypeInfoForField,getRawClass,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testGenericArrayTypeField,"getActualType,getClass,isArray,getField,isEnum,getTypeInfoForField,getRawClass,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testTypeVariableField,"getActualType,isArray,getClass,getField,isEnum,getTypeInfoForField,getRawClass",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testTypeVariableArrayField,"getActualType,getClass,isArray,getField,isEnum,getTypeInfoForField,getRawClass",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testMutliDimensionalTypeVariableArrayField,"getActualType,getClass,isArray,getField,isEnum,getTypeInfoForField,getRawClass",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testParameterizedTypeVariableField,"getActualType,getClass,isArray,getField,isEnum,getTypeInfoForField,getRawClass,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testNestedParameterizedTypeVariableField,"getActualType,getClass,isArray,getField,isEnum,getTypeInfoForField,getRawClass,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testParameterizedTypeVariableArrayField,"getActualType,getClass,isArray,getField,isEnum,getTypeInfoForField,getRawClass,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testWildcardField,"getActualType,getClass,isArray,getField,isEnum,getTypeInfoForField,getRawClass,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testArrayOfWildcardField,"getActualType,getClass,isArray,getField,isEnum,getTypeInfoForField,getRawClass,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testListStringWildcardField,"getActualType,getClass,isArray,getField,isEnum,getTypeInfoForField,getRawClass,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testArrayOfListStringWildcardField,"getActualType,getClass,isArray,getField,isEnum,getTypeInfoForField,getRawClass,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testListTypeVariableWildcardField,"getActualType,getClass,isArray,getField,isEnum,getTypeInfoForField,getRawClass,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testArrayOfListTypeVariableWildcardField,"getActualType,getClass,isArray,getField,isEnum,getTypeInfoForField,getRawClass,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,gson/src/test/java/com/google/gson/TypeInfoMapTest.java,TypeInfoMapTest.java,testInvalidConstruction,,no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testNonMapConstruction,getType,no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testBasicGetters,"getType,getKeyType,getValueType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testMapImplementations,"getType,getKeyType,getValueType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,gson/src/test/java/com/google/gson/TypeInfoTest.java,TypeInfoTest.java,testPrimitive,"isArray,getWrappedClass,getRawClass,isPrimitive",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testPrimitiveWrapper,"isArray,getRawClass,isPrimitive",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testString,"isArray,getRawClass,isPrimitive",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testObject,"isArray,getRawClass,isPrimitive",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testPrimitiveType,"getRawClass,isArray",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testObjectType,"isArray,getRawClass,isPrimitive",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testParameterizedTypes,"getActualType,isArray,getRawClass,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testGenericizedGenericType,"isArray,getActualTypeForFirstTypeVariable,getRawClass,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testStrangeTypeParameters,,no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,gson/src/test/java/com/google/gson/TypeUtilsTest.java,TypeUtilsTest.java,testGetActualTypeForFirstTypeVariable,getActualTypeForFirstTypeVariable,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testIsArrayForNonArrayClasses,isArray,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testIsArrayForArrayClasses,isArray,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testToRawClassForNonGenericClasses,toRawClass,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/faa5464e848ab9c6afc46e38eb416e7a156a23e1"", ""faa5464e848ab9c6afc46e38eb416e7a156a23e1"")",,,,,testToRawClassForGenericClasses,toRawClass,yes,yes
01/10/2011 16:47:36,"=HYPERLINK(""https://github.com/google/gson/commit/0e5f6704cd5f438c55efe1fcf70c857f95f8190b"", ""0e5f6704cd5f438c55efe1fcf70c857f95f8190b"")","=HYPERLINK(""https://github.com/google/gson/commit/25f0014305b8418da278629ee9726f9b3aa79b48"", ""25f0014305b8418da278629ee9726f9b3aa79b48"")",inder123@gmail.com,Added sonatype oss as parent for the pom. Diabled repository management with-in POM per instructions at: https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,TypeTokenTest.java,testIsAssignableFromRawTypes,"isAssignableFrom,get",no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/25f0014305b8418da278629ee9726f9b3aa79b48"", ""25f0014305b8418da278629ee9726f9b3aa79b48"")",,,,,testIsAssignableFromWithTypeParameters,"getGenericType,get,isAssignableFrom,getClass,getDeclaredField",no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/25f0014305b8418da278629ee9726f9b3aa79b48"", ""25f0014305b8418da278629ee9726f9b3aa79b48"")",,,,,testIsAssignableFromWithBasicWildcards,"getGenericType,get,isAssignableFrom,getClass,getDeclaredField",no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/25f0014305b8418da278629ee9726f9b3aa79b48"", ""25f0014305b8418da278629ee9726f9b3aa79b48"")",,,,,testIsAssignableFromWithNestedWildcards,"getGenericType,get,isAssignableFrom,getClass,getDeclaredField",no,yes
02/03/2011 21:09:41,"=HYPERLINK(""https://github.com/google/gson/commit/114633fbf933c3085a189d20c62fadae0398fb39"", ""114633fbf933c3085a189d20c62fadae0398fb39"")","=HYPERLINK(""https://github.com/google/gson/commit/ea48a1debfaa863d29dac8ddee9a4dd5a55ed785"", ""ea48a1debfaa863d29dac8ddee9a4dd5a55ed785"")",joel.leitch@gmail.com,Provide a means to add serialization or deserialization specific exclusion strategies.,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,ExclusionStrategy2AdapterTest.java,testConstruction,,no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/ea48a1debfaa863d29dac8ddee9a4dd5a55ed785"", ""ea48a1debfaa863d29dac8ddee9a4dd5a55ed785"")",,,,,testAdapterDoesSameForBothModes,"shouldSkipField,shouldSkipClass,getFields",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/ea48a1debfaa863d29dac8ddee9a4dd5a55ed785"", ""ea48a1debfaa863d29dac8ddee9a4dd5a55ed785"")",,,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,FunctionWithInternalDependenciesTest.java,testUserDefinedExclusionPolicies,"create,setExclusionStrategies,toJson",no,no
,,"=HYPERLINK(""https://github.com/google/gson/commit/ea48a1debfaa863d29dac8ddee9a4dd5a55ed785"", ""ea48a1debfaa863d29dac8ddee9a4dd5a55ed785"")",,,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,ExclusionStrategyFunctionalTest.java,testExclusionStrategy2Serialization,"toJson,createGson,contains",no,no
04/12/2011 12:29:19,"=HYPERLINK(""https://github.com/google/gson/commit/4917fc7f7628518ade0dfa11464192a17af1c7d1"", ""4917fc7f7628518ade0dfa11464192a17af1c7d1"")","=HYPERLINK(""https://github.com/google/gson/commit/7f9762db633dde22b801e365d4ae02d50acaa6bf"", ""7f9762db633dde22b801e365d4ae02d50acaa6bf"")",joel.leitch@gmail.com,"Lift restriction on naming when using the ""@SerializedNamed"" annotation.

Fix for Issue 290.",gson/src/test/java/com/google/gson/JsonFieldNameValidatorTest.java,JsonFieldNameValidatorTest.java,testValidFieldBeginsWithDollarSign,validate,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7f9762db633dde22b801e365d4ae02d50acaa6bf"", ""7f9762db633dde22b801e365d4ae02d50acaa6bf"")",,,,,testValidFieldBeginsWithUnderscore,validate,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7f9762db633dde22b801e365d4ae02d50acaa6bf"", ""7f9762db633dde22b801e365d4ae02d50acaa6bf"")",,,,,testValidFieldBeginsWithLetter,validate,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7f9762db633dde22b801e365d4ae02d50acaa6bf"", ""7f9762db633dde22b801e365d4ae02d50acaa6bf"")",,,,,testValidFieldMixingLetter,validate,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7f9762db633dde22b801e365d4ae02d50acaa6bf"", ""7f9762db633dde22b801e365d4ae02d50acaa6bf"")",,,,,testInvalidFieldStartingWithNumbers,validate,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7f9762db633dde22b801e365d4ae02d50acaa6bf"", ""7f9762db633dde22b801e365d4ae02d50acaa6bf"")",,,,,testInvalidFieldStartingTwoDollarSigns,validate,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7f9762db633dde22b801e365d4ae02d50acaa6bf"", ""7f9762db633dde22b801e365d4ae02d50acaa6bf"")",,,,,testInvalidFieldStartingTwoUnderscores,validate,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7f9762db633dde22b801e365d4ae02d50acaa6bf"", ""7f9762db633dde22b801e365d4ae02d50acaa6bf"")",,,,,testInvalidFieldStartingDollarUnderscore,validate,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7f9762db633dde22b801e365d4ae02d50acaa6bf"", ""7f9762db633dde22b801e365d4ae02d50acaa6bf"")",,,,,testJavaAndJsKeywordAsFieldName,validate,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7f9762db633dde22b801e365d4ae02d50acaa6bf"", ""7f9762db633dde22b801e365d4ae02d50acaa6bf"")",,,,,testInvalidCharacters,validate,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7f9762db633dde22b801e365d4ae02d50acaa6bf"", ""7f9762db633dde22b801e365d4ae02d50acaa6bf"")",,,,,testDashesInFieldName,validate,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7f9762db633dde22b801e365d4ae02d50acaa6bf"", ""7f9762db633dde22b801e365d4ae02d50acaa6bf"")",,,,,testSpacesInFieldName,validate,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7f9762db633dde22b801e365d4ae02d50acaa6bf"", ""7f9762db633dde22b801e365d4ae02d50acaa6bf"")",,,,,testSpacesInBeginningOfName,validate,yes,yes
07/12/2011 18:50:00,"=HYPERLINK(""https://github.com/google/gson/commit/9cf579ef01e66dad2ffe907350d2d088497138a8"", ""9cf579ef01e66dad2ffe907350d2d088497138a8"")","=HYPERLINK(""https://github.com/google/gson/commit/041d499a7c4af1b70617001ded11dbc01732d97f"", ""041d499a7c4af1b70617001ded11dbc01732d97f"")",jesse@swank.ca,"Use Streams instead of Escaper.

Fixes issue 345.",gson/src/test/java/com/google/gson/EscaperTest.java,EscaperTest.java,testNoSpecialCharacters,escapeJsonString,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/041d499a7c4af1b70617001ded11dbc01732d97f"", ""041d499a7c4af1b70617001ded11dbc01732d97f"")",,,,,testNewlineEscaping,escapeJsonString,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/041d499a7c4af1b70617001ded11dbc01732d97f"", ""041d499a7c4af1b70617001ded11dbc01732d97f"")",,,,,testCarrageReturnEscaping,escapeJsonString,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/041d499a7c4af1b70617001ded11dbc01732d97f"", ""041d499a7c4af1b70617001ded11dbc01732d97f"")",,,,,testTabEscaping,escapeJsonString,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/041d499a7c4af1b70617001ded11dbc01732d97f"", ""041d499a7c4af1b70617001ded11dbc01732d97f"")",,,,,testDoubleQuoteEscaping,escapeJsonString,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/041d499a7c4af1b70617001ded11dbc01732d97f"", ""041d499a7c4af1b70617001ded11dbc01732d97f"")",,,,,testSingleQuoteEscaping,escapeJsonString,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/041d499a7c4af1b70617001ded11dbc01732d97f"", ""041d499a7c4af1b70617001ded11dbc01732d97f"")",,,,,testLineSeparatorEscaping,escapeJsonString,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/041d499a7c4af1b70617001ded11dbc01732d97f"", ""041d499a7c4af1b70617001ded11dbc01732d97f"")",,,,,testParagraphSeparatorEscaping,escapeJsonString,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/041d499a7c4af1b70617001ded11dbc01732d97f"", ""041d499a7c4af1b70617001ded11dbc01732d97f"")",,,,,testControlCharBlockEscaping,"escapeJsonString,equals",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/041d499a7c4af1b70617001ded11dbc01732d97f"", ""041d499a7c4af1b70617001ded11dbc01732d97f"")",,,,,testEqualsEscaping,"convertToUnicodeString,escapeJsonString,codePointAt,indexOf",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/041d499a7c4af1b70617001ded11dbc01732d97f"", ""041d499a7c4af1b70617001ded11dbc01732d97f"")",,,,,testGreaterThanAndLessThanEscaping,"convertToUnicodeString,escapeJsonString,codePointAt,indexOf",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/041d499a7c4af1b70617001ded11dbc01732d97f"", ""041d499a7c4af1b70617001ded11dbc01732d97f"")",,,,,testAmpersandEscaping,"convertToUnicodeString,escapeJsonString,codePointAt,indexOf",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/041d499a7c4af1b70617001ded11dbc01732d97f"", ""041d499a7c4af1b70617001ded11dbc01732d97f"")",,,,,testSlashEscaping,escapeJsonString,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/041d499a7c4af1b70617001ded11dbc01732d97f"", ""041d499a7c4af1b70617001ded11dbc01732d97f"")",,,,,testSingleQuoteNotEscaped,escapeJsonString,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/041d499a7c4af1b70617001ded11dbc01732d97f"", ""041d499a7c4af1b70617001ded11dbc01732d97f"")",,,,,testRequiredEscapingUnicodeCharacter,"escapeJsonString,equals",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/041d499a7c4af1b70617001ded11dbc01732d97f"", ""041d499a7c4af1b70617001ded11dbc01732d97f"")",,,,,testUnicodeCharacterStringNoEscaping,escapeJsonString,yes,yes
09/08/2011 23:20:25,"=HYPERLINK(""https://github.com/google/gson/commit/f67940cb638fcf4d3443b057176bb1b84d054ac0"", ""f67940cb638fcf4d3443b057176bb1b84d054ac0"")","=HYPERLINK(""https://github.com/google/gson/commit/ea9c0236c79134cd2ecdd1b6d244a584e7fc6c22"", ""ea9c0236c79134cd2ecdd1b6d244a584e7fc6c22"")",jesse@swank.ca,"Retire two old bad features
 - overriding primitive type adapters
 - auto unwrapping of single element arrays",gson/src/test/java/com/google/gson/functional/ArrayTest.java,ArrayTest.java,testArrayOfPrimitivesWithCustomTypeAdapter,"toJson,create,valueOf,registerTypeAdapter,fromJson",no,no
,,"=HYPERLINK(""https://github.com/google/gson/commit/ea9c0236c79134cd2ecdd1b6d244a584e7fc6c22"", ""ea9c0236c79134cd2ecdd1b6d244a584e7fc6c22"")",,,,,testArrayOfObjectsWithoutTypeInfoDeserialization,fromJson,no,no
,,"=HYPERLINK(""https://github.com/google/gson/commit/ea9c0236c79134cd2ecdd1b6d244a584e7fc6c22"", ""ea9c0236c79134cd2ecdd1b6d244a584e7fc6c22"")",,,,,testArrayWithoutTypeInfoDeserialization,fromJson,no,no
09/09/2011 00:04:24,"=HYPERLINK(""https://github.com/google/gson/commit/e19672d0a394d552469147e12a70bf81413f0076"", ""e19672d0a394d552469147e12a70bf81413f0076"")","=HYPERLINK(""https://github.com/google/gson/commit/ba283925ae8503ca72f326486a3518fb517df5b7"", ""ba283925ae8503ca72f326486a3518fb517df5b7"")",jesse@swank.ca,Throw the right exceptions when primitives fail to parse.,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,PrimitiveTest.java,testPrimitiveIntegerAutoboxedInASingleElementArrayDeserialization,fromJson,no,no
,,"=HYPERLINK(""https://github.com/google/gson/commit/ba283925ae8503ca72f326486a3518fb517df5b7"", ""ba283925ae8503ca72f326486a3518fb517df5b7"")",,,,,testPrimitiveLongAutoboxedInASingleElementArrayDeserialization,fromJson,no,no
,,"=HYPERLINK(""https://github.com/google/gson/commit/ba283925ae8503ca72f326486a3518fb517df5b7"", ""ba283925ae8503ca72f326486a3518fb517df5b7"")",,,,,testPrimitiveBooleanAutoboxedInASingleElementArrayDeserialization,fromJson,no,no
,,"=HYPERLINK(""https://github.com/google/gson/commit/ba283925ae8503ca72f326486a3518fb517df5b7"", ""ba283925ae8503ca72f326486a3518fb517df5b7"")",,,,,testPrimitiveDoubleAutoboxedInASingleElementArrayDeserialization,fromJson,no,no
,,"=HYPERLINK(""https://github.com/google/gson/commit/ba283925ae8503ca72f326486a3518fb517df5b7"", ""ba283925ae8503ca72f326486a3518fb517df5b7"")",,,,,testBigDecimalInASingleElementArrayDeserialization,fromJson,no,no
,,"=HYPERLINK(""https://github.com/google/gson/commit/ba283925ae8503ca72f326486a3518fb517df5b7"", ""ba283925ae8503ca72f326486a3518fb517df5b7"")",,,,,testBigIntegerInASingleElementArrayDeserialization,fromJson,no,no
,,"=HYPERLINK(""https://github.com/google/gson/commit/ba283925ae8503ca72f326486a3518fb517df5b7"", ""ba283925ae8503ca72f326486a3518fb517df5b7"")",,,,,testOverridingDefaultPrimitiveSerialization,"toJson,create,valueOf,registerTypeAdapter,fromJson",no,no
09/09/2011 00:41:35,"=HYPERLINK(""https://github.com/google/gson/commit/9424949245bb46bd63f3fed83e67daa9fdbdbff9"", ""9424949245bb46bd63f3fed83e67daa9fdbdbff9"")","=HYPERLINK(""https://github.com/google/gson/commit/99801915aa324c4d07b852e23debfbcefb1a3007"", ""99801915aa324c4d07b852e23debfbcefb1a3007"")",jesse@swank.ca,Don't unwrap single-element String arrays,gson/src/test/java/com/google/gson/functional/StringTest.java,StringTest.java,testStringValueAsSingleElementArrayDeserialization,fromJson,no,no
09/09/2011 01:26:21,"=HYPERLINK(""https://github.com/google/gson/commit/e7566085683827ae9278880c38e21a80ccd573d9"", ""e7566085683827ae9278880c38e21a80ccd573d9"")","=HYPERLINK(""https://github.com/google/gson/commit/fede584b9811f35432a936af0c9441f4e05df80a"", ""fede584b9811f35432a936af0c9441f4e05df80a"")",jesse@swank.ca,Forbid custom serializers for primitive types (so we can avoid boxing in the reflective and array adapters),gson/src/test/java/com/google/gson/functional/CustomDeserializerTest.java,CustomDeserializerTest.java,testCustomDeserializerReturnsNullForTopLevelPrimitives,"registerTypeAdapter,fromJson,create",no,no
,,"=HYPERLINK(""https://github.com/google/gson/commit/fede584b9811f35432a936af0c9441f4e05df80a"", ""fede584b9811f35432a936af0c9441f4e05df80a"")",,,,,testCustomDeserializerReturnsNullForPrimitiveFields,"registerTypeAdapter,fromJson,create",no,no
09/11/2011 02:04:56,"=HYPERLINK(""https://github.com/google/gson/commit/25c6ae177b1ca56db7f3c29eb574bdd032a06165"", ""25c6ae177b1ca56db7f3c29eb574bdd032a06165"")","=HYPERLINK(""https://github.com/google/gson/commit/cdd5d80b85155c21c61f888fb3e70c65e72edef7"", ""cdd5d80b85155c21c61f888fb3e70c65e72edef7"")",jesse@swank.ca,"Down to 22 failing tests.

Consolidated all of the different code paths that we use to construct instances. We now have an ObjectConstructor class that knows what type it constructs; this means that we don't need to ever do reflection to lookup a constructor at construction time.

Cleaned up some buggy type adapters, particularly around handling of null.

Removed dead code for object graph navigation.

Moved some classes into 'internal' so they are visible to the 'bind' subpackage.

Turned some TypeAdapterFactory/TypeAdapter pairs inside out so that the TypeAdapter is now the inner class. This is necessary so that the factories can take parameters.

Added an API to request the 'next' type adapter for a type. This allows type adapters to compose other type adapters. We're using this in two places:
 - where the user has excluded a type from serialization but not deserialization, we need to use the ""default"" deserialization but interpose null on serialization. We create a type adapter that delegates for one and returns null for the other.
 - similarly when a DOM type serializer is registered but no deserializer, or vice versa.
This is the biggest change to the MiniGson core.

For backwards compatibility, return null for the empty string.

Simplify JsonSerializationContext/JsonDeserializationContext to simply call through to GSON. SerializeDefault is currently unsupported.

More useful error messages when calling getAsBoolean on a JsonNull.

Remove currently unused MemoryRefStack. We might need this back again, though wiring it back in will be much more difficult because we don't interject ourselves between the users' various type adapters.",gson/src/test/java/com/google/gson/DefaultConstructorAllocatorTest.java,DefaultConstructorAllocatorTest.java,testObjectConstructor,"isEmpty,newInstance,isInCache",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/cdd5d80b85155c21c61f888fb3e70c65e72edef7"", ""cdd5d80b85155c21c61f888fb3e70c65e72edef7"")",,,,,testMissingDefaultConstructor,"newInstance,isInCache",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/cdd5d80b85155c21c61f888fb3e70c65e72edef7"", ""cdd5d80b85155c21c61f888fb3e70c65e72edef7"")",,,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,MappedObjectConstructorTest.java,testInstanceCreatorTakesTopPrecedence,"register,construct",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/cdd5d80b85155c21c61f888fb3e70c65e72edef7"", ""cdd5d80b85155c21c61f888fb3e70c65e72edef7"")",,,,,testNoInstanceCreatorInvokesDefaultConstructor,construct,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/cdd5d80b85155c21c61f888fb3e70c65e72edef7"", ""cdd5d80b85155c21c61f888fb3e70c65e72edef7"")",,,,,testNoDefaultConstructor,construct,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/cdd5d80b85155c21c61f888fb3e70c65e72edef7"", ""cdd5d80b85155c21c61f888fb3e70c65e72edef7"")",,,gson/src/test/java/com/google/gson/MemoryRefStackTest.java,MemoryRefStackTest.java,testPeekEmptyStack,peek,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/cdd5d80b85155c21c61f888fb3e70c65e72edef7"", ""cdd5d80b85155c21c61f888fb3e70c65e72edef7"")",,,,,testPushPeekAndPop,"getClass,peek,pop,push",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/cdd5d80b85155c21c61f888fb3e70c65e72edef7"", ""cdd5d80b85155c21c61f888fb3e70c65e72edef7"")",,,,,testPopTooMany,"pop,getClass,push",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/cdd5d80b85155c21c61f888fb3e70c65e72edef7"", ""cdd5d80b85155c21c61f888fb3e70c65e72edef7"")",,,,,testContains,"contains,push",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/cdd5d80b85155c21c61f888fb3e70c65e72edef7"", ""cdd5d80b85155c21c61f888fb3e70c65e72edef7"")",,,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,NullExclusionStrategyTest.java,testNeverSkipsClass,shouldSkipClass,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/cdd5d80b85155c21c61f888fb3e70c65e72edef7"", ""cdd5d80b85155c21c61f888fb3e70c65e72edef7"")",,,,,testNeverSkipsField,"shouldSkipField,getFields",yes,yes
09/16/2011 00:40:05,"=HYPERLINK(""https://github.com/google/gson/commit/c71e61cf4830ee950b8fbc601ccadfe4d7ab6d1a"", ""c71e61cf4830ee950b8fbc601ccadfe4d7ab6d1a"")","=HYPERLINK(""https://github.com/google/gson/commit/915c5d4d6f46ca65f60430b7a9b403be87453243"", ""915c5d4d6f46ca65f60430b7a9b403be87453243"")",inder123@gmail.com,"Converted EnumTypeAdapter to new style.
Got rid of default Hierarchy Serializer/Deserializers from DefaultTypeAdapters.
Got rid of methods for gettting default serializers/deserializers/instance creators. Instead we reuse the static final instances.
Fixed warnings in TypeAdapters where a parameterized type T was hiding the parameterized T in methods.
Removed support to unwrap single element array of enums into enum values. Also removed the test that verifies this behavior.",gson/src/test/java/com/google/gson/functional/EnumTest.java,EnumTest.java,testTopLevelEnumInASingleElementArrayDeserialization,"getExpectedJson,fromJson",no,no
09/28/2011 13:00:34,"=HYPERLINK(""https://github.com/google/gson/commit/2236c95c37e4ac882c20ac080e4ebc68b85b296c"", ""2236c95c37e4ac882c20ac080e4ebc68b85b296c"")","=HYPERLINK(""https://github.com/google/gson/commit/3f261441651fe6a5f57cf4e6aa655f9661dc606a"", ""3f261441651fe6a5f57cf4e6aa655f9661dc606a"")",jesse@swank.ca,Death to serializeDefault and deserializeDefault,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,SystemOnlyTypeAdaptersTest.java,testSerializeDefault,toJson,no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3f261441651fe6a5f57cf4e6aa655f9661dc606a"", ""3f261441651fe6a5f57cf4e6aa655f9661dc606a"")",,,,,testDeserializeDefault,fromJson,no,yes
11/12/2011 17:32:44,"=HYPERLINK(""https://github.com/google/gson/commit/172143df7c37482f8c1d43ac4bff769d40ee5ac9"", ""172143df7c37482f8c1d43ac4bff769d40ee5ac9"")","=HYPERLINK(""https://github.com/google/gson/commit/0ac36805c22209cf736a895466f36d56536b3a8d"", ""0ac36805c22209cf736a895466f36d56536b3a8d"")",jesse@swank.ca,Removing JsonObject.deepCopy() and JsonArray.deepCopy(),gson/src/test/java/com/google/gson/JsonArrayTest.java,JsonArrayTest.java,testDeepCopy,"get,getAsJsonObject,add,getAsJsonArray,entrySet,size,deepCopy",yes,no
,,"=HYPERLINK(""https://github.com/google/gson/commit/0ac36805c22209cf736a895466f36d56536b3a8d"", ""0ac36805c22209cf736a895466f36d56536b3a8d"")",,,gson/src/test/java/com/google/gson/JsonObjectTest.java,JsonObjectTest.java,testDeepCopy,"get,getAsJsonObject,add,getAsJsonArray,entrySet,size,deepCopy",yes,no
11/20/2011 23:08:23,"=HYPERLINK(""https://github.com/google/gson/commit/f89e92aa9fd4c705655dbc0b0584defc996d796f"", ""f89e92aa9fd4c705655dbc0b0584defc996d796f"")","=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",jesse@swank.ca,"Tighten up some of the fields naming policy code. The main thrust of this change is replacing classes like UpperCaseNamingPolicy with the corresponding method calls. Classes like CompositeFieldNamingPolicy are replaced by sequences of method calls. This also replaces unit tests with functional tests.

One nice benefit of this is a 3%/5.7KiB reduction in the size of gson.jar to 184KiB.",gson/src/test/java/com/google/gson/CamelCaseSeparatorNamingPolicyTest.java,CamelCaseSeparatorNamingPolicyTest.java,testInvalidInstantiation,,no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testUnderscoreSeparator,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testMultiCharSeparator,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testNameBeginsWithCapital,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testExceptionPossiblyIncorrectSeparation,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,gson/src/test/java/com/google/gson/FieldNamingStrategy2AdapterTest.java,FieldNamingStrategy2AdapterTest.java,testSimpleAdapter,"getFields,getName,translateName,toUpperCase",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,gson/src/test/java/com/google/gson/JavaFieldNamingPolicyTest.java,JavaFieldNamingPolicyTest.java,testFieldNamingPolicy,"getFields,translateName,getName",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testNullField,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,gson/src/test/java/com/google/gson/LowerCamelCaseSeparatorNamingPolicyTest.java,LowerCamelCaseSeparatorNamingPolicyTest.java,testNameBeginsWithLowerCase,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testNameBeginsWithUpperCase,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testExceptionPossiblyIncorrectSeparation,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testUsingDashesInstead,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,gson/src/test/java/com/google/gson/LowerCaseNamingPolicyTest.java,LowerCaseNamingPolicyTest.java,testAllLowerCase,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testAllUpperCase,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testMixedCase,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,gson/src/test/java/com/google/gson/ModifyFirstLetterNamingPolicyTest.java,ModifyFirstLetterNamingPolicyTest.java,testInvalidConstruction,,no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testLowerCaseFirstLetter,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testUpperCaseFirstLetter,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testSingleCharacterField,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testFieldStartsWithUnderscore,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testFieldStartsWithUnderscoreFollowedBySingleLetter,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testFieldHasSingleNonLetter,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testFieldHasNoLetters,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,gson/src/test/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicyTest.java,SerializedNameAnnotationInterceptingNamingPolicyTest.java,testFieldWithAnnotation,"equals,getField,translateName",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testFieldWithoutAnnotation,"getField,translateName",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,gson/src/test/java/com/google/gson/UpperCamelCaseSeparatorNamingPolicyTest.java,UpperCamelCaseSeparatorNamingPolicyTest.java,testAllLowerCase,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testAllUpperCase,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testAllUpperCaseExceptFirst,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testAllUpperCaseStartingWithUnderscore,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testMixedCase,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,gson/src/test/java/com/google/gson/UpperCaseNamingPolicyTest.java,UpperCaseNamingPolicyTest.java,testAllLowerCase,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testAllUpperCase,translateName,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/f777a192ee13fd59048aa7ba640cc8023051c89d"", ""f777a192ee13fd59048aa7ba640cc8023051c89d"")",,,,,testMixedCase,translateName,yes,yes
11/22/2011 00:07:18,"=HYPERLINK(""https://github.com/google/gson/commit/fed332906debe74d0879c77a03825b66f7970c41"", ""fed332906debe74d0879c77a03825b66f7970c41"")","=HYPERLINK(""https://github.com/google/gson/commit/0ff7d980c5430be317aca0405477dec74ab0390c"", ""0ff7d980c5430be317aca0405477dec74ab0390c"")",jesse@swank.ca,"Create a single, monolithic class to manage all exclusion strategies. This gets our file size within target of 177KiB.

I intend to follow this up with a builder for our new class to avoid multiple-argument constructor calls.",gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,DisjunctionExclusionStrategyTest.java,testBadInstantiation,,no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/0ff7d980c5430be317aca0405477dec74ab0390c"", ""0ff7d980c5430be317aca0405477dec74ab0390c"")",,,,,testSkipFieldsWithMixedTrueAndFalse,"shouldSkipField,add,shouldSkipClass",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/0ff7d980c5430be317aca0405477dec74ab0390c"", ""0ff7d980c5430be317aca0405477dec74ab0390c"")",,,,,testSkipFieldsWithFalseOnly,"shouldSkipField,add,shouldSkipClass",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/0ff7d980c5430be317aca0405477dec74ab0390c"", ""0ff7d980c5430be317aca0405477dec74ab0390c"")",,,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,VersionExclusionStrategyTest.java,testDisallowNegativeValuesAndFailFast,,no,no
11/22/2011 01:37:13,"=HYPERLINK(""https://github.com/google/gson/commit/aa2f61b7d8defddc2a78de43b8042178241daedb"", ""aa2f61b7d8defddc2a78de43b8042178241daedb"")","=HYPERLINK(""https://github.com/google/gson/commit/fed332906debe74d0879c77a03825b66f7970c41"", ""fed332906debe74d0879c77a03825b66f7970c41"")",jesse@swank.ca,"Rename GsonExclusionStrategy to Excluder. The new class is its own factory, which simplifies its caller in GsonBuilder. It no longer implements ExclusionStrategy, which allows the callers to pass in a boolean for serialize/deserialize. This allows us to use one excluder for both code paths. The delegate ExclusionStrategy instances might end up not being shared so it has two lists internally.",gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,FunctionWithInternalDependenciesTest.java,testAnonymousLocalClassesSerialization,"Collections,toJson",no,yes
11/23/2011 00:16:55,"=HYPERLINK(""https://github.com/google/gson/commit/1794182a560588973c6ec131e9c24bd39508433d"", ""1794182a560588973c6ec131e9c24bd39508433d"")","=HYPERLINK(""https://github.com/google/gson/commit/3cbe355cb6b1ab5d84ddb75837430c3d9584119b"", ""3cbe355cb6b1ab5d84ddb75837430c3d9584119b"")",jesse@swank.ca,"Commit to factories as the mechanism to lookup type adapters. This uses factories for type hierarchy adapters. We keep a separate list of factories for tree-style adapters registered with registerTypeHierarchyAdapter to guarantee that these come after the non-hierarchy adapters.

This drops support for type hierarchy instance creators. I don't expect this to be a problem. We'll also detect fewer errors where multiple type adapters can serialize the same type. With APIs like getNextTypeAdapter, I think this might actually be an improvement!",gson/src/test/java/com/google/gson/JsonDeserializerExceptionWrapperTest.java,JsonDeserializerExceptionWrapperTest.java,testRethrowJsonParseException,"getCause,deserialize,getMessage",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3cbe355cb6b1ab5d84ddb75837430c3d9584119b"", ""3cbe355cb6b1ab5d84ddb75837430c3d9584119b"")",,,,,testWrappedExceptionPropagation,"getCause,deserialize",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3cbe355cb6b1ab5d84ddb75837430c3d9584119b"", ""3cbe355cb6b1ab5d84ddb75837430c3d9584119b"")",,,,,testProperSerialization,deserialize,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3cbe355cb6b1ab5d84ddb75837430c3d9584119b"", ""3cbe355cb6b1ab5d84ddb75837430c3d9584119b"")",,,gson/src/test/java/com/google/gson/internal/TypeMapTest.java,TypeMapTest.java,testNullMap,"getHandlerFor,hasSpecificHandlerFor",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3cbe355cb6b1ab5d84ddb75837430c3d9584119b"", ""3cbe355cb6b1ab5d84ddb75837430c3d9584119b"")",,,,,testHasGenericButNotSpecific,"hasSpecificHandlerFor,getHandlerFor,register,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3cbe355cb6b1ab5d84ddb75837430c3d9584119b"", ""3cbe355cb6b1ab5d84ddb75837430c3d9584119b"")",,,,,testHasSpecificType,"hasSpecificHandlerFor,getHandlerFor,register,getType",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3cbe355cb6b1ab5d84ddb75837430c3d9584119b"", ""3cbe355cb6b1ab5d84ddb75837430c3d9584119b"")",,,,,testTypeOverridding,"hasSpecificHandlerFor,getHandlerFor,register",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3cbe355cb6b1ab5d84ddb75837430c3d9584119b"", ""3cbe355cb6b1ab5d84ddb75837430c3d9584119b"")",,,,,testMakeUnmodifiable,"makeUnmodifiable,register",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3cbe355cb6b1ab5d84ddb75837430c3d9584119b"", ""3cbe355cb6b1ab5d84ddb75837430c3d9584119b"")",,,,,testTypeHierarchy,"getHandlerFor,registerForTypeHierarchy",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3cbe355cb6b1ab5d84ddb75837430c3d9584119b"", ""3cbe355cb6b1ab5d84ddb75837430c3d9584119b"")",,,,,testTypeHierarchyMultipleHandlers,"getHandlerFor,registerForTypeHierarchy",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3cbe355cb6b1ab5d84ddb75837430c3d9584119b"", ""3cbe355cb6b1ab5d84ddb75837430c3d9584119b"")",,,,,testReplaceExistingTypeHierarchyHandler,"getHandlerFor,registerForTypeHierarchy",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/3cbe355cb6b1ab5d84ddb75837430c3d9584119b"", ""3cbe355cb6b1ab5d84ddb75837430c3d9584119b"")",,,,,testHidingExistingTypeHierarchyHandlerIsDisallowed,registerForTypeHierarchy,yes,yes
11/26/2011 09:30:38,"=HYPERLINK(""https://github.com/google/gson/commit/4c06b013697d06b327f3c537e23181887aeab774"", ""4c06b013697d06b327f3c537e23181887aeab774"")","=HYPERLINK(""https://github.com/google/gson/commit/ddde79c861cd2a3f62c33650698942cac1bb961c"", ""ddde79c861cd2a3f62c33650698942cac1bb961c"")",jesse@swank.ca,Cache all computed type adapters. On one particularly violent test (issue 375) this improves performance by 77%.,gson/src/test/java/com/google/gson/LruCacheTest.java,LruCacheTest.java,testCacheHitAndMiss,"get,put,intValue",no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/ddde79c861cd2a3f62c33650698942cac1bb961c"", ""ddde79c861cd2a3f62c33650698942cac1bb961c"")",,,,,testCacheKeyOverwrite,"get,put,intValue",no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/ddde79c861cd2a3f62c33650698942cac1bb961c"", ""ddde79c861cd2a3f62c33650698942cac1bb961c"")",,,,,testCacheEviction,"get,put,intValue",no,yes
04/12/2012 13:15:56,"=HYPERLINK(""https://github.com/google/gson/commit/7b61e784c0c55870225637de639f43fe71cc2492"", ""7b61e784c0c55870225637de639f43fe71cc2492"")","=HYPERLINK(""https://github.com/google/gson/commit/6d351fea073bf0795dfba4ff8fc88f9557ca8979"", ""6d351fea073bf0795dfba4ff8fc88f9557ca8979"")",jesse@swank.ca,Remove testParameterizedMapSubclassDeserialization that never passed. We'll eventually add an equivalent to the extras/ package.,gson/src/test/java/com/google/gson/functional/MapTest.java,MapTest.java,testParameterizedMapSubclassDeserialization,"get,intValue,getType,fromJson",no,no
09/04/2012 16:10:12,"=HYPERLINK(""https://github.com/google/gson/commit/d1ff7bb397d10ab60136ebaedb5db9c7009cbeca"", ""d1ff7bb397d10ab60136ebaedb5db9c7009cbeca"")","=HYPERLINK(""https://github.com/google/gson/commit/411c5c0b502401c7af381a64e94253972b7db5f2"", ""411c5c0b502401c7af381a64e94253972b7db5f2"")",inder123@gmail.com,Deleted spurious directory gson-codegen. The real codegen code is in trunk/codegen,gson/gson-codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,CodeGenFunctionalTest.java,testGeneratedJson,,no,yes
10/11/2012 15:29:40,"=HYPERLINK(""https://github.com/google/gson/commit/714ac8e64399eb156abc4ce3e517185c098fb7e6"", ""714ac8e64399eb156abc4ce3e517185c098fb7e6"")","=HYPERLINK(""https://github.com/google/gson/commit/c25278b4d6036a0e0ae758b13194813936d9e911"", ""c25278b4d6036a0e0ae758b13194813936d9e911"")",inder123@gmail.com,added tests for using intercept in fields and lists. These tests are currently failing.,gson/src/test/java/com/google/gson/functional/InterceptorTest.java,InterceptorTest.java,testPostDeserialize,fromJson,no,no
04/04/2013 16:31:23,"=HYPERLINK(""https://github.com/google/gson/commit/af6aa5f782dcfc38a060d2de9476337e14ffedcb"", ""af6aa5f782dcfc38a060d2de9476337e14ffedcb"")","=HYPERLINK(""https://github.com/google/gson/commit/7d53113ebc9ef6921c6238f013aabd10890611a0"", ""7d53113ebc9ef6921c6238f013aabd10890611a0"")",joel.leitch@gmail.com,Use the LinkedHashTreeMap instead of LinkedTreeMap and delete the LinkedTreeMap version.,gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java,LinkedTreeMapTest.java,testPutAndGet,"get,entrySet,put,containsKey,size",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d53113ebc9ef6921c6238f013aabd10890611a0"", ""7d53113ebc9ef6921c6238f013aabd10890611a0"")",,,,,testGetAndContainsNullKey,"get,put,containsKey",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d53113ebc9ef6921c6238f013aabd10890611a0"", ""7d53113ebc9ef6921c6238f013aabd10890611a0"")",,,,,testDisallowPutForNullKeys,put,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d53113ebc9ef6921c6238f013aabd10890611a0"", ""7d53113ebc9ef6921c6238f013aabd10890611a0"")",,,,,testSingleElement,"get,isEmpty,remove,entrySet,put,size",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d53113ebc9ef6921c6238f013aabd10890611a0"", ""7d53113ebc9ef6921c6238f013aabd10890611a0"")",,,,,testAddAndRemove,"remove,entrySet,put,size",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/7d53113ebc9ef6921c6238f013aabd10890611a0"", ""7d53113ebc9ef6921c6238f013aabd10890611a0"")",,,,,testInsertionOrderPreserved,"entrySet,put,size",yes,yes
03/09/2014 01:30:37,"=HYPERLINK(""https://github.com/google/gson/commit/b9998e511f3a3c19d52c104d66d78037eaff88ec"", ""b9998e511f3a3c19d52c104d66d78037eaff88ec"")","=HYPERLINK(""https://github.com/google/gson/commit/bf549f0589105a42f159c78a621fc28087561d16"", ""bf549f0589105a42f159c78a621fc28087561d16"")",inder123@gmail.com,deleted support for the magic GSON_TYPE_ADAPTER field,gson/src/test/java/com/google/gson/functional/GsonFieldTypeAdapterTest.java,GsonFieldTypeAdapterTest.java,testFieldAdapterInvoked,toJson,no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/bf549f0589105a42f159c78a621fc28087561d16"", ""bf549f0589105a42f159c78a621fc28087561d16"")",,,,,testRegisteredAdapterOverridesFieldAdapter,"nextString,toJson,create,value,registerTypeAdapter",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/bf549f0589105a42f159c78a621fc28087561d16"", ""bf549f0589105a42f159c78a621fc28087561d16"")",,,,,testRegisteredSerializerOverridesFieldAdapter,"toJson,create,registerTypeAdapter,fromJson",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/bf549f0589105a42f159c78a621fc28087561d16"", ""bf549f0589105a42f159c78a621fc28087561d16"")",,,,,testRegisteredDeserializerOverridesFieldAdapter,"toJson,create,registerTypeAdapter,fromJson",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/bf549f0589105a42f159c78a621fc28087561d16"", ""bf549f0589105a42f159c78a621fc28087561d16"")",,,,,testFieldAdapterNotInvokedIfNull,toJson,no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/bf549f0589105a42f159c78a621fc28087561d16"", ""bf549f0589105a42f159c78a621fc28087561d16"")",,,,,testNonStaticFieldAdapterNotInvoked,"contains,toJson",no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/bf549f0589105a42f159c78a621fc28087561d16"", ""bf549f0589105a42f159c78a621fc28087561d16"")",,,,,testIncorrectTypeAdapterNotInvoked,"contains,toJson",no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/bf549f0589105a42f159c78a621fc28087561d16"", ""bf549f0589105a42f159c78a621fc28087561d16"")",,,,,testSuperclassTypeAdapterNotInvoked,"contains,toJson",no,yes
09/17/2021 19:21:37,"=HYPERLINK(""https://github.com/google/gson/commit/26a1928277f7eba70609f02697509ba9258dd8ef"", ""26a1928277f7eba70609f02697509ba9258dd8ef"")","=HYPERLINK(""https://github.com/google/gson/commit/f1f90313fc22c122a28716e7ecac1543e6fa253e"", ""f1f90313fc22c122a28716e7ecac1543e6fa253e"")",noreply@github.com,"Fix `RuntimeTypeAdapterFactory` depending on internal `Streams` class (#1959)

* Fix RuntimeTypeAdapterFactory depending on internal Streams class

* Clean up gson-extras project, make it Maven module of gson-parent

* Remove broken test from GraphAdapterBuilderTest",extras/src/test/java/com/google/gson/graph/GraphAdapterBuilderTest.java,GraphAdapterBuilderTest.java,testSerializationDirectSelfReference,"toJson,replace,registerOn,addType,create",no,no
11/01/2021 17:09:14,"=HYPERLINK(""https://github.com/google/gson/commit/e0de45ff69ba3daacc3b7623cc74fc69a4eaf6d0"", ""e0de45ff69ba3daacc3b7623cc74fc69a4eaf6d0"")","=HYPERLINK(""https://github.com/google/gson/commit/b4dab86b105c85e6b7d7106c9ff11e3e923e3485"", ""b4dab86b105c85e6b7d7106c9ff11e3e923e3485"")",noreply@github.com,"Delete unused LinkedHashTreeMap (#1992)

Class seems to be unused since commit f29d5bc37b52c4b8d2ad15a10bb0c7f684c1d45d.
Gson currently only uses LinkedTreeMap.",gson/src/test/java/com/google/gson/internal/LinkedHashTreeMapTest.java,LinkedHashTreeMapTest.java,testIterationOrder,"put,values,keySet",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/b4dab86b105c85e6b7d7106c9ff11e3e923e3485"", ""b4dab86b105c85e6b7d7106c9ff11e3e923e3485"")",,,,,testRemoveRootDoesNotDoubleUnlink,"keySet,next,remove,entrySet,iterator,put",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/b4dab86b105c85e6b7d7106c9ff11e3e923e3485"", ""b4dab86b105c85e6b7d7106c9ff11e3e923e3485"")",,,,,testPutNullKeyFails,put,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/b4dab86b105c85e6b7d7106c9ff11e3e923e3485"", ""b4dab86b105c85e6b7d7106c9ff11e3e923e3485"")",,,,,testPutNonComparableKeyFails,put,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/b4dab86b105c85e6b7d7106c9ff11e3e923e3485"", ""b4dab86b105c85e6b7d7106c9ff11e3e923e3485"")",,,,,testContainsNonComparableKeyReturnsFalse,"put,containsKey",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/b4dab86b105c85e6b7d7106c9ff11e3e923e3485"", ""b4dab86b105c85e6b7d7106c9ff11e3e923e3485"")",,,,,testContainsNullKeyIsAlwaysFalse,"put,containsKey",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/b4dab86b105c85e6b7d7106c9ff11e3e923e3485"", ""b4dab86b105c85e6b7d7106c9ff11e3e923e3485"")",,,,,testPutOverrides,"get,put,size",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/b4dab86b105c85e6b7d7106c9ff11e3e923e3485"", ""b4dab86b105c85e6b7d7106c9ff11e3e923e3485"")",,,,,testEmptyStringValues,"get,put,containsKey",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/b4dab86b105c85e6b7d7106c9ff11e3e923e3485"", ""b4dab86b105c85e6b7d7106c9ff11e3e923e3485"")",,,,,testForceDoublingAndRehash,"get,abs,toString,nextInt,put,containsKey",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/b4dab86b105c85e6b7d7106c9ff11e3e923e3485"", ""b4dab86b105c85e6b7d7106c9ff11e3e923e3485"")",,,,,testClear,"clear,keySet,put,size",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/b4dab86b105c85e6b7d7106c9ff11e3e923e3485"", ""b4dab86b105c85e6b7d7106c9ff11e3e923e3485"")",,,,,testEqualsAndHashCode,put,yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/b4dab86b105c85e6b7d7106c9ff11e3e923e3485"", ""b4dab86b105c85e6b7d7106c9ff11e3e923e3485"")",,,,,testAvlWalker,node,no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/b4dab86b105c85e6b7d7106c9ff11e3e923e3485"", ""b4dab86b105c85e6b7d7106c9ff11e3e923e3485"")",,,,,testAvlBuilder,,no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/b4dab86b105c85e6b7d7106c9ff11e3e923e3485"", ""b4dab86b105c85e6b7d7106c9ff11e3e923e3485"")",,,,,testDoubleCapacity,"node,doubleCapacity",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/b4dab86b105c85e6b7d7106c9ff11e3e923e3485"", ""b4dab86b105c85e6b7d7106c9ff11e3e923e3485"")",,,,,testDoubleCapacityAllNodesOnLeft,"doubleCapacity,node",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/b4dab86b105c85e6b7d7106c9ff11e3e923e3485"", ""b4dab86b105c85e6b7d7106c9ff11e3e923e3485"")",,,,,testJavaSerialization,"close,readObject,toByteArray,put,writeObject,singletonMap",yes,yes
11/09/2021 09:16:35,"=HYPERLINK(""https://github.com/google/gson/commit/b0595c595bd2c052cd05e0283bb37b67c02bd06f"", ""b0595c595bd2c052cd05e0283bb37b67c02bd06f"")","=HYPERLINK(""https://github.com/google/gson/commit/0d9f6b677ae67cbd749ebca817139041d1977831"", ""0d9f6b677ae67cbd749ebca817139041d1977831"")",noreply@github.com,"Fix failing to serialize Collection or Map with inaccessible constructor (#1902)

* Remove UnsafeReflectionAccessor

Revert #1218

Usage of sun.misc.Unsafe to change internal AccessibleObject.override field
to suppress JPMS warnings goes against the intentions of the JPMS and does not
work anymore in newer versions, see #1540.
Therefore remove it and instead create a descriptive exception when making a
member accessible fails. If necessary users can also still use `java` command
line flags to open external modules.

* Fix failing to serialize Collection or Map with inaccessible constructor

Also remove tests which rely on Java implementation details.

* Don't keep reference to access exception of ConstructorConstructor

This also avoids a confusing stack trace, since the previously caught
exception might have had a complete unrelated stack trace.

* Remove Maven toolchain requirement

* Address review feedback

* Add back test for Security Manager",gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,ThrowableFunctionalTest.java,testExceptionWithoutCause,"toJson,contains,fromJson,getMessage",no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/0d9f6b677ae67cbd749ebca817139041d1977831"", ""0d9f6b677ae67cbd749ebca817139041d1977831"")",,,,,testExceptionWithCause,"getCause,toJson,contains,fromJson,getMessage",no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/0d9f6b677ae67cbd749ebca817139041d1977831"", ""0d9f6b677ae67cbd749ebca817139041d1977831"")",,,,,testSerializedNameOnExceptionFields,"contains,toJson",no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/0d9f6b677ae67cbd749ebca817139041d1977831"", ""0d9f6b677ae67cbd749ebca817139041d1977831"")",,,,,testErrorWithoutCause,"toJson,contains,fromJson,getMessage",no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/0d9f6b677ae67cbd749ebca817139041d1977831"", ""0d9f6b677ae67cbd749ebca817139041d1977831"")",,,,,testErrornWithCause,"getCause,toJson,contains,fromJson,getMessage",no,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/0d9f6b677ae67cbd749ebca817139041d1977831"", ""0d9f6b677ae67cbd749ebca817139041d1977831"")",,,gson/src/test/java/com/google/gson/internal/bind/RecursiveTypesResolveTest.java,RecursiveTypesResolveTest.java,testIssue603PrintStream,getAdapter,no,no
,,"=HYPERLINK(""https://github.com/google/gson/commit/0d9f6b677ae67cbd749ebca817139041d1977831"", ""0d9f6b677ae67cbd749ebca817139041d1977831"")",,,,,testIssue440WeakReference,getAdapter,no,no
,,"=HYPERLINK(""https://github.com/google/gson/commit/0d9f6b677ae67cbd749ebca817139041d1977831"", ""0d9f6b677ae67cbd749ebca817139041d1977831"")",,,gson/src/test/java/com/google/gson/internal/reflect/UnsafeReflectionAccessorTest.java,UnsafeReflectionAccessorTest.java,testMakeAccessibleWithUnsafe,"makeAccessibleWithUnsafe,getDeclaredField",yes,yes
,,"=HYPERLINK(""https://github.com/google/gson/commit/0d9f6b677ae67cbd749ebca817139041d1977831"", ""0d9f6b677ae67cbd749ebca817139041d1977831"")",,,,,testMakeAccessibleWithRestrictiveSecurityManager,"equals,getDeclaredField,setSecurityManager,makeAccessible,makeAccessibleWithUnsafe,getSecurityManager",yes,yes
04/03/2022 22:00:54,"=HYPERLINK(""https://github.com/google/gson/commit/b2b1424582f973457e15f4eeba35cd3c0c0ed2b6"", ""b2b1424582f973457e15f4eeba35cd3c0c0ed2b6"")","=HYPERLINK(""https://github.com/google/gson/commit/774c751a9ee026c6d7e4b0ca44dac6ad526de557"", ""774c751a9ee026c6d7e4b0ca44dac6ad526de557"")",noreply@github.com,"codegen removal (#2099)

* Delete CodeGenFunctionalTest.java

* codegen removal

* pom.xml update

* email config

* Remove unnecessary space change.

Co-authored-by: Éamonn McManus <emcmanus@google.com>",codegen/src/test/java/com/google/gson/codegen/functional/CodeGenFunctionalTest.java,CodeGenFunctionalTest.java,testGeneratedJson,,no,yes
07/29/2022 12:10:54,"=HYPERLINK(""https://github.com/google/gson/commit/6d2557d5d1a8ac498f2bcee20e5053c93b33ecce"", ""6d2557d5d1a8ac498f2bcee20e5053c93b33ecce"")","=HYPERLINK(""https://github.com/google/gson/commit/2deb2099d3007b8bb0e324bc364b6f9dddada0cd"", ""2deb2099d3007b8bb0e324bc364b6f9dddada0cd"")",noreply@github.com,Remove unused package-private FieldAttributes methods (#2162),gson/src/test/java/com/google/gson/FieldAttributesTest.java,FieldAttributesTest.java,testIsSynthetic,isSynthetic,yes,no
08/07/2022 18:00:35,"=HYPERLINK(""https://github.com/google/gson/commit/9eb04414c0a7f201d039cdbf9a9ebc4144990d3f"", ""9eb04414c0a7f201d039cdbf9a9ebc4144990d3f"")","=HYPERLINK(""https://github.com/google/gson/commit/76c78f5925ec80434cbbd28332f841f74fee3275"", ""76c78f5925ec80434cbbd28332f841f74fee3275"")",noreply@github.com,"Improve InternationalizationTest (#1705)

* Improve InternationalizationTest

- Remove ""raw"" tests since after compiling they are the same as the one with
  escape sequences
- Add tests for supplementary code points (> \uFFFF)

* Improve variable names, fix incorrect escape sequences",gson/src/test/java/com/google/gson/functional/InternationalizationTest.java,InternationalizationTest.java,testStringsWithRawChineseCharactersDeserialization,fromJson,no,no
